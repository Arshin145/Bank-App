{"name": "test_OrangeHRM_Login_DDT__4[getDataForLogin1]", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: '.\\\\testcases\\\\Test_data\\\\~$Test_Data.xlsx'", "trace": "self = <testcases.Pytest_Login_ORM_DDT.Test_Login_DDT object at 0x000001F4FB9DB6D0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"27dbe8be06d77b1d5440e3404a0a2d27\")>, getDataForLogin = ('Admin1', 'admin123', 'Login_Fail')\n\n    def test_OrangeHRM_Login_DDT__4(self, setup, getDataForLogin):\n        self.log.info(\"test_login_params_3 is started\")\n        self.driver = setup\n        self.log.info(\"Opening browser\")\n        time.sleep(2)\n    \n        self.lp = Login_Page_Class(self.driver)\n>       self.rows = Excel_utility.get_rowcount(self.File_Path, \"Login_Data\")\n\ntestcases\\Pytest_Login_ORM_DDT.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutilities\\Excel_utility.py:5: in get_rowcount\n    book = openpyxl.load_workbook(file)\nvenv\\Lib\\site-packages\\openpyxl\\reader\\excel.py:346: in load_workbook\n    reader = ExcelReader(filename, read_only, keep_vba,\nvenv\\Lib\\site-packages\\openpyxl\\reader\\excel.py:123: in __init__\n    self.archive = _validate_archive(fn)\nvenv\\Lib\\site-packages\\openpyxl\\reader\\excel.py:95: in _validate_archive\n    archive = ZipFile(filename, 'r')\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile [closed]>, file = '.\\\\testcases\\\\Test_data\\\\~$Test_Data.xlsx', mode = 'r', compression = 0, allowZip64 = True, compresslevel = None\n\n    def __init__(self, file, mode=\"r\", compression=ZIP_STORED, allowZip64=True,\n                 compresslevel=None, *, strict_timestamps=True, metadata_encoding=None):\n        \"\"\"Open the ZIP file with mode read 'r', write 'w', exclusive create 'x',\n        or append 'a'.\"\"\"\n        if mode not in ('r', 'w', 'x', 'a'):\n            raise ValueError(\"ZipFile requires mode 'r', 'w', 'x', or 'a'\")\n    \n        _check_compression(compression)\n    \n        self._allowZip64 = allowZip64\n        self._didModify = False\n        self.debug = 0  # Level of printing: 0 through 3\n        self.NameToInfo = {}    # Find file info given name\n        self.filelist = []      # List of ZipInfo instances for archive\n        self.compression = compression  # Method of compression\n        self.compresslevel = compresslevel\n        self.mode = mode\n        self.pwd = None\n        self._comment = b''\n        self._strict_timestamps = strict_timestamps\n        self.metadata_encoding = metadata_encoding\n    \n        # Check that we don't try to write with nonconforming codecs\n        if self.metadata_encoding and mode != 'r':\n            raise ValueError(\n                \"metadata_encoding is only supported for reading files\")\n    \n        # Check if we were passed a file-like object\n        if isinstance(file, os.PathLike):\n            file = os.fspath(file)\n        if isinstance(file, str):\n            # No, it's a filename\n            self._filePassed = 0\n            self.filename = file\n            modeDict = {'r' : 'rb', 'w': 'w+b', 'x': 'x+b', 'a' : 'r+b',\n                        'r+b': 'w+b', 'w+b': 'wb', 'x+b': 'xb'}\n            filemode = modeDict[mode]\n            while True:\n                try:\n>                   self.fp = io.open(file, filemode)\nE                   FileNotFoundError: [Errno 2] No such file or directory: '.\\\\testcases\\\\Test_data\\\\~$Test_Data.xlsx'\n\nC:\\Users\\Windows 10\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\zipfile.py:1283: FileNotFoundError"}, "attachments": [{"name": "log", "source": "6e0140e8-e43b-46c4-84d5-06e56e77cdc0-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "57f48bcd-d61a-4453-bb18-c50bbb858d83-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "getDataForLogin", "value": "('Admin1', 'admin123', 'Login_Fail')"}], "start": 1722928556035, "stop": 1722928558035, "uuid": "1096b9c5-9be9-4f4a-962d-45317f5bf78e", "historyId": "5221a1e287bbf59df3186bcf5db135a3", "testCaseId": "5c6de8068e407e1e295cc6460e668ddd", "fullName": "testcases.Pytest_Login_ORM_DDT.Test_Login_DDT#test_OrangeHRM_Login_DDT__4", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "Pytest_Login_ORM_DDT"}, {"name": "subSuite", "value": "Test_Login_DDT"}, {"name": "host", "value": "Arshin"}, {"name": "thread", "value": "6396-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.Pytest_Login_ORM_DDT"}]}